DEBUG_PARSER: Initializing parser...
DEBUG_SYMTABLE: symtable_search called with key: _
DEBUG_SYMTABLE: symtable_search called with key: _
DEBUG_SYMTABLE: Inserted symbol: '_' at index: 4
DEBUG_PARSER: Parsing program
DEBUG_PARSER: Parsing import statement
DEBUG_PARSER: Expected token: 0, got token: 0
Line and column: 1 1
DEBUG_PARSER: Expected token: 22, got token: 22
Line and column: 1 11
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 1 20
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 1 32
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 1 33
DEBUG_PARSER: Finished parsing import statement
DEBUG_SYMTABLE: symtable_search called with key: ifj.readstr
DEBUG_SYMTABLE: symtable_search called with key: ifj.readstr
DEBUG_SYMTABLE: Inserted symbol: 'ifj.readstr' at index: 33
DEBUG_SYMTABLE: symtable_search called with key: ifj.readi32
DEBUG_SYMTABLE: symtable_search called with key: ifj.readi32
DEBUG_SYMTABLE: Inserted symbol: 'ifj.readi32' at index: 54
DEBUG_SYMTABLE: symtable_search called with key: ifj.readf64
DEBUG_SYMTABLE: symtable_search called with key: ifj.readf64
DEBUG_SYMTABLE: Inserted symbol: 'ifj.readf64' at index: 24
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: Inserted symbol: 'ifj.write' at index: 55
DEBUG_SYMTABLE: symtable_search called with key: ifj.i2f
DEBUG_SYMTABLE: symtable_search called with key: ifj.i2f
DEBUG_SYMTABLE: Inserted symbol: 'ifj.i2f' at index: 13
DEBUG_SYMTABLE: symtable_search called with key: ifj.f2i
DEBUG_SYMTABLE: symtable_search called with key: ifj.f2i
DEBUG_SYMTABLE: Comparing key: 'ifj.f2i' with existing symbol: 'ifj.i2f'
DEBUG_SYMTABLE: Inserted symbol: 'ifj.f2i' at index: 13
DEBUG_SYMTABLE: symtable_search called with key: ifj.string
DEBUG_SYMTABLE: symtable_search called with key: ifj.string
DEBUG_SYMTABLE: Inserted symbol: 'ifj.string' at index: 3
DEBUG_SYMTABLE: symtable_search called with key: ifj.length
DEBUG_SYMTABLE: symtable_search called with key: ifj.length
DEBUG_SYMTABLE: Inserted symbol: 'ifj.length' at index: 14
DEBUG_SYMTABLE: symtable_search called with key: ifj.concat
DEBUG_SYMTABLE: symtable_search called with key: ifj.concat
DEBUG_SYMTABLE: Comparing key: 'ifj.concat' with existing symbol: '_'
DEBUG_SYMTABLE: Inserted symbol: 'ifj.concat' at index: 4
DEBUG_SYMTABLE: symtable_search called with key: ifj.substring
DEBUG_SYMTABLE: symtable_search called with key: ifj.substring
DEBUG_SYMTABLE: Inserted symbol: 'ifj.substring' at index: 45
DEBUG_SYMTABLE: symtable_search called with key: ifj.strcmp
DEBUG_SYMTABLE: symtable_search called with key: ifj.strcmp
DEBUG_SYMTABLE: Inserted symbol: 'ifj.strcmp' at index: 37
DEBUG_SYMTABLE: symtable_search called with key: ifj.ord
DEBUG_SYMTABLE: symtable_search called with key: ifj.ord
DEBUG_SYMTABLE: Inserted symbol: 'ifj.ord' at index: 17
DEBUG_SYMTABLE: symtable_search called with key: ifj.chr
DEBUG_SYMTABLE: symtable_search called with key: ifj.chr
DEBUG_SYMTABLE: Inserted symbol: 'ifj.chr' at index: 9
DEBUG_PARSER: Parsing function
DEBUG_PARSER: Expected token: 7, got token: 7
Line and column: 4 0
DEBUG_PARSER: Expected token: 6, got token: 6
Line and column: 4 4
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 4 19
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 4 20
!!!DEBUG_PARSER: Brace count passed
DEBUG_SYMTABLE: symtable_search called with key: test_numbers
DEBUG_SYMTABLE: symtable_search called with key: test_numbers
DEBUG_SYMTABLE: symtable_search called with key: test_numbers
DEBUG_SYMTABLE: symtable_search called with key: test_numbers
DEBUG_SYMTABLE: Inserted symbol: 'test_numbers' at index: 0
DEBUG_PARSER: Parsing function
DEBUG_PARSER: Expected token: 7, got token: 7
Line and column: 16 0
DEBUG_PARSER: Expected token: 6, got token: 6
Line and column: 16 4
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 16 19
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 16 20
!!!DEBUG_PARSER: Brace count passed
DEBUG_SYMTABLE: symtable_search called with key: test_strings
DEBUG_SYMTABLE: symtable_search called with key: test_strings
DEBUG_SYMTABLE: symtable_search called with key: test_strings
DEBUG_SYMTABLE: symtable_search called with key: test_strings
DEBUG_SYMTABLE: Inserted symbol: 'test_strings' at index: 46
DEBUG_PARSER: Parsing function
DEBUG_PARSER: Expected token: 7, got token: 7
Line and column: 25 0
DEBUG_PARSER: Expected token: 6, got token: 6
Line and column: 25 4
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 25 22
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 25 23
!!!DEBUG_PARSER: Brace count passed
DEBUG_SYMTABLE: symtable_search called with key: test_substrings
DEBUG_SYMTABLE: symtable_search called with key: test_substrings
DEBUG_SYMTABLE: Comparing key: 'test_substrings' with symbol: 'ifj.readf64'
DEBUG_SYMTABLE: symtable_search called with key: test_substrings
DEBUG_SYMTABLE: symtable_search called with key: test_substrings
DEBUG_SYMTABLE: Comparing key: 'test_substrings' with existing symbol: 'ifj.readf64'
DEBUG_SYMTABLE: Inserted symbol: 'test_substrings' at index: 24
DEBUG_PARSER: Parsing function
DEBUG_PARSER: Expected token: 7, got token: 7
Line and column: 37 0
DEBUG_PARSER: Expected token: 6, got token: 6
Line and column: 37 4
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 37 17
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 37 18
!!!DEBUG_PARSER: Brace count passed
DEBUG_SYMTABLE: symtable_search called with key: test_loops
DEBUG_SYMTABLE: symtable_search called with key: test_loops
DEBUG_SYMTABLE: symtable_search called with key: test_loops
DEBUG_SYMTABLE: symtable_search called with key: test_loops
DEBUG_SYMTABLE: Inserted symbol: 'test_loops' at index: 49
DEBUG_PARSER: Parsing function
DEBUG_PARSER: Expected token: 7, got token: 7
Line and column: 47 0
DEBUG_PARSER: Expected token: 6, got token: 6
Line and column: 47 4
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 47 25
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 47 26
!!!DEBUG_PARSER: Brace count passed
DEBUG_SYMTABLE: symtable_search called with key: test_null_handling
DEBUG_SYMTABLE: symtable_search called with key: test_null_handling
DEBUG_SYMTABLE: symtable_search called with key: test_null_handling
DEBUG_SYMTABLE: symtable_search called with key: test_null_handling
DEBUG_SYMTABLE: Inserted symbol: 'test_null_handling' at index: 35
DEBUG_PARSER: Parsing function
DEBUG_PARSER: Expected token: 7, got token: 7
Line and column: 64 0
DEBUG_PARSER: Expected token: 6, got token: 6
Line and column: 64 4
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 64 11
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 64 12
!!!DEBUG_PARSER: Brace count passed
DEBUG_SYMTABLE: symtable_search called with key: main
DEBUG_SYMTABLE: symtable_search called with key: main
DEBUG_SYMTABLE: symtable_search called with key: main
DEBUG_SYMTABLE: symtable_search called with key: main
DEBUG_SYMTABLE: Inserted symbol: 'main' at index: 42
DEBUG_PARSER: Parsing function
DEBUG_PARSER: Expected token: 7, got token: 7
Line and column: 4 0
DEBUG_PARSER: Expected token: 6, got token: 6
Line and column: 4 4
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 4 19
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 4 20
DEBUG_PARSER: Parsing block
DEBUG_PARSER: Expected token: 31, got token: 31
Line and column: 4 27
DEBUG_PARSER: Parsing variable assigning
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 5 7
!!!!DEBUG_PARSER: Recognized identifier: write
!!!!DEBUG_PARSER: Recognized builtin function: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'ifj.write'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 5 13
DEBUG_PARSER: Function return index: 4
DEBUG_PARSER: Parsing expression. Current token: 17
. Line and column: 5 16
DEBUG_PARSER: Parsing primary expression. Current token: 17
 Line and column: 5 16
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 5 40
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 5 41
DEBUG_PARSER: Parsing variable declaration
DEBUG_PARSER: Expected token: 22, got token: 22
Line and column: 6 17
DEBUG_PARSER: Parsing expression. Current token: 15
. Line and column: 6 19
DEBUG_PARSER: Parsing primary expression. Current token: 15
 Line and column: 6 19
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 6 21
DEBUG_SYMTABLE: symtable_search called with key: a.test_numbers
DEBUG_SYMTABLE: symtable_search called with key: a.test_numbers
DEBUG_SYMTABLE: symtable_search called with key: a.test_numbers
DEBUG_SYMTABLE: symtable_search called with key: a.test_numbers
DEBUG_SYMTABLE: Inserted symbol: 'a.test_numbers' at index: 47
DEBUG_PARSER: Parsing variable declaration
DEBUG_PARSER: Expected token: 22, got token: 22
Line and column: 7 17
DEBUG_PARSER: Parsing expression. Current token: 16
. Line and column: 7 19
DEBUG_PARSER: Parsing primary expression. Current token: 16
 Line and column: 7 19
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 7 22
DEBUG_SYMTABLE: symtable_search called with key: b.test_numbers
DEBUG_SYMTABLE: symtable_search called with key: b.test_numbers
DEBUG_SYMTABLE: symtable_search called with key: b.test_numbers
DEBUG_SYMTABLE: symtable_search called with key: b.test_numbers
DEBUG_SYMTABLE: Inserted symbol: 'b.test_numbers' at index: 16
DEBUG_PARSER: Parsing variable declaration
DEBUG_PARSER: Expected token: 22, got token: 22
Line and column: 8 19
DEBUG_PARSER: Parsing expression. Current token: 14
. Line and column: 8 21
DEBUG_PARSER: Parsing primary expression. Current token: 14
 Line and column: 8 21
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 8 24
!!!!DEBUG_PARSER: Recognized identifier: i2f
!!!!DEBUG_PARSER: Recognized builtin function: i2f
DEBUG_SYMTABLE: symtable_search called with key: ifj.i2f
DEBUG_SYMTABLE: symtable_search called with key: ifj.i2f
DEBUG_SYMTABLE: Comparing key: 'ifj.i2f' with symbol: 'ifj.f2i'
DEBUG_SYMTABLE: Comparing key: 'ifj.i2f' with symbol: 'ifj.i2f'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 8 28
DEBUG_PARSER: Function return index: 2
DEBUG_PARSER: Parsing expression. Current token: 14
. Line and column: 8 29
DEBUG_PARSER: Parsing primary expression. Current token: 14
 Line and column: 8 29
DEBUG_SYMTABLE: symtable_search called with key: a
DEBUG_SYMTABLE: symtable_search called with key: a
DEBUG_SYMTABLE: symtable_search called with key: a.test_numbers
DEBUG_SYMTABLE: symtable_search called with key: a.test_numbers
DEBUG_SYMTABLE: Comparing key: 'a.test_numbers' with symbol: 'a.test_numbers'
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 8 30
DEBUG_PARSER: Parsing primary expression. Current token: 14
 Line and column: 8 34
DEBUG_SYMTABLE: symtable_search called with key: b
DEBUG_SYMTABLE: symtable_search called with key: b
DEBUG_SYMTABLE: symtable_search called with key: b.test_numbers
DEBUG_SYMTABLE: symtable_search called with key: b.test_numbers
DEBUG_SYMTABLE: Comparing key: 'b.test_numbers' with symbol: 'b.test_numbers'
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 8 35
DEBUG_SYMTABLE: symtable_search called with key: sum.test_numbers
DEBUG_SYMTABLE: symtable_search called with key: sum.test_numbers
DEBUG_SYMTABLE: Comparing key: 'sum.test_numbers' with symbol: 'ifj.string'
DEBUG_SYMTABLE: symtable_search called with key: sum.test_numbers
DEBUG_SYMTABLE: symtable_search called with key: sum.test_numbers
DEBUG_SYMTABLE: Comparing key: 'sum.test_numbers' with existing symbol: 'ifj.string'
DEBUG_SYMTABLE: Inserted symbol: 'sum.test_numbers' at index: 3
DEBUG_PARSER: Parsing variable assigning
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 9 7
!!!!DEBUG_PARSER: Recognized identifier: write
!!!!DEBUG_PARSER: Recognized builtin function: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: Comparing key: 'write' with symbol: 'b.test_numbers'
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'ifj.write'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 9 13
DEBUG_PARSER: Function return index: 4
DEBUG_PARSER: Parsing expression. Current token: 17
. Line and column: 9 14
DEBUG_PARSER: Parsing primary expression. Current token: 17
 Line and column: 9 14
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 9 38
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 9 39
DEBUG_PARSER: Parsing variable assigning
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 9 44
!!!!DEBUG_PARSER: Recognized identifier: write
!!!!DEBUG_PARSER: Recognized builtin function: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: Comparing key: 'write' with symbol: 'b.test_numbers'
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'ifj.write'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 9 50
DEBUG_PARSER: Function return index: 4
DEBUG_PARSER: Parsing expression. Current token: 14
. Line and column: 9 51
DEBUG_PARSER: Parsing primary expression. Current token: 14
 Line and column: 9 51
DEBUG_SYMTABLE: symtable_search called with key: sum
DEBUG_SYMTABLE: symtable_search called with key: sum
DEBUG_SYMTABLE: symtable_search called with key: sum.test_numbers
DEBUG_SYMTABLE: symtable_search called with key: sum.test_numbers
DEBUG_SYMTABLE: Comparing key: 'sum.test_numbers' with symbol: 'sum.test_numbers'
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 9 54
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 9 55
DEBUG_PARSER: Parsing variable assigning
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 9 60
!!!!DEBUG_PARSER: Recognized identifier: write
!!!!DEBUG_PARSER: Recognized builtin function: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: Comparing key: 'write' with symbol: 'b.test_numbers'
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'ifj.write'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 9 66
DEBUG_PARSER: Function return index: 4
DEBUG_PARSER: Parsing expression. Current token: 17
. Line and column: 9 68
DEBUG_PARSER: Parsing primary expression. Current token: 17
 Line and column: 9 68
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 9 71
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 9 72
DEBUG_PARSER: Parsing variable declaration
DEBUG_PARSER: Expected token: 22, got token: 22
Line and column: 11 23
DEBUG_PARSER: Parsing expression. Current token: 14
. Line and column: 11 25
DEBUG_PARSER: Parsing primary expression. Current token: 14
 Line and column: 11 25
DEBUG_SYMTABLE: symtable_search called with key: a
DEBUG_SYMTABLE: symtable_search called with key: a
DEBUG_SYMTABLE: symtable_search called with key: a.test_numbers
DEBUG_SYMTABLE: symtable_search called with key: a.test_numbers
DEBUG_SYMTABLE: Comparing key: 'a.test_numbers' with symbol: 'a.test_numbers'
DEBUG_PARSER: Parsing primary expression. Current token: 14
 Line and column: 11 29
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 11 32
!!!!DEBUG_PARSER: Recognized identifier: f2i
!!!!DEBUG_PARSER: Recognized builtin function: f2i
DEBUG_SYMTABLE: symtable_search called with key: ifj.f2i
DEBUG_SYMTABLE: symtable_search called with key: ifj.f2i
DEBUG_SYMTABLE: Comparing key: 'ifj.f2i' with symbol: 'ifj.f2i'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 11 36
DEBUG_PARSER: Function return index: 1
DEBUG_PARSER: Parsing expression. Current token: 14
. Line and column: 11 37
DEBUG_PARSER: Parsing primary expression. Current token: 14
 Line and column: 11 37
DEBUG_SYMTABLE: symtable_search called with key: b
DEBUG_SYMTABLE: symtable_search called with key: b
DEBUG_SYMTABLE: symtable_search called with key: b.test_numbers
DEBUG_SYMTABLE: symtable_search called with key: b.test_numbers
DEBUG_SYMTABLE: Comparing key: 'b.test_numbers' with symbol: 'b.test_numbers'
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 11 38
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 11 39
DEBUG_SYMTABLE: symtable_search called with key: product.test_numbers
DEBUG_SYMTABLE: symtable_search called with key: product.test_numbers
DEBUG_SYMTABLE: Comparing key: 'product.test_numbers' with symbol: 'a.test_numbers'
DEBUG_SYMTABLE: symtable_search called with key: product.test_numbers
DEBUG_SYMTABLE: symtable_search called with key: product.test_numbers
DEBUG_SYMTABLE: Comparing key: 'product.test_numbers' with existing symbol: 'a.test_numbers'
DEBUG_SYMTABLE: Inserted symbol: 'product.test_numbers' at index: 47
DEBUG_PARSER: Parsing variable assigning
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 12 7
!!!!DEBUG_PARSER: Recognized identifier: write
!!!!DEBUG_PARSER: Recognized builtin function: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: Comparing key: 'write' with symbol: 'b.test_numbers'
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'ifj.write'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 12 13
DEBUG_PARSER: Function return index: 4
DEBUG_PARSER: Parsing expression. Current token: 17
. Line and column: 12 14
DEBUG_PARSER: Parsing primary expression. Current token: 17
 Line and column: 12 14
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 12 52
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 12 53
DEBUG_PARSER: Parsing variable assigning
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 12 58
!!!!DEBUG_PARSER: Recognized identifier: write
!!!!DEBUG_PARSER: Recognized builtin function: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: Comparing key: 'write' with symbol: 'b.test_numbers'
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'ifj.write'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 12 64
DEBUG_PARSER: Function return index: 4
DEBUG_PARSER: Parsing expression. Current token: 14
. Line and column: 12 65
DEBUG_PARSER: Parsing primary expression. Current token: 14
 Line and column: 12 65
DEBUG_SYMTABLE: symtable_search called with key: product
DEBUG_SYMTABLE: symtable_search called with key: product
DEBUG_SYMTABLE: symtable_search called with key: product.test_numbers
DEBUG_SYMTABLE: symtable_search called with key: product.test_numbers
DEBUG_SYMTABLE: Comparing key: 'product.test_numbers' with symbol: 'product.test_numbers'
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 12 72
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 12 73
DEBUG_PARSER: Parsing variable assigning
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 12 78
!!!!DEBUG_PARSER: Recognized identifier: write
!!!!DEBUG_PARSER: Recognized builtin function: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: Comparing key: 'write' with symbol: 'b.test_numbers'
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'ifj.write'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 12 84
DEBUG_PARSER: Function return index: 4
DEBUG_PARSER: Parsing expression. Current token: 17
. Line and column: 12 86
DEBUG_PARSER: Parsing primary expression. Current token: 17
 Line and column: 12 86
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 12 89
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 12 90
DEBUG_PARSER: Expected token: 32, got token: 32
Line and column: 13 0
DEBUG_PARSER: Parsing function
DEBUG_PARSER: Expected token: 7, got token: 7
Line and column: 16 0
DEBUG_PARSER: Expected token: 6, got token: 6
Line and column: 16 4
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 16 19
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 16 20
DEBUG_PARSER: Parsing block
DEBUG_PARSER: Expected token: 31, got token: 31
Line and column: 16 27
DEBUG_PARSER: Parsing variable assigning
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 17 7
!!!!DEBUG_PARSER: Recognized identifier: write
!!!!DEBUG_PARSER: Recognized builtin function: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: Comparing key: 'write' with symbol: 'b.test_numbers'
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'ifj.write'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 17 13
DEBUG_PARSER: Function return index: 4
DEBUG_PARSER: Parsing expression. Current token: 17
. Line and column: 17 16
DEBUG_PARSER: Parsing primary expression. Current token: 17
 Line and column: 17 16
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 17 40
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 17 41
DEBUG_PARSER: Parsing variable declaration
DEBUG_PARSER: Expected token: 22, got token: 22
Line and column: 18 15
DEBUG_PARSER: Parsing expression. Current token: 14
. Line and column: 18 17
DEBUG_PARSER: Parsing primary expression. Current token: 14
 Line and column: 18 17
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 18 20
!!!!DEBUG_PARSER: Recognized identifier: string
!!!!DEBUG_PARSER: Recognized builtin function: string
DEBUG_SYMTABLE: symtable_search called with key: ifj.string
DEBUG_SYMTABLE: symtable_search called with key: ifj.string
DEBUG_SYMTABLE: Comparing key: 'ifj.string' with symbol: 'sum.test_numbers'
DEBUG_SYMTABLE: Comparing key: 'ifj.string' with symbol: 'ifj.string'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 18 27
DEBUG_PARSER: Function return index: 6
DEBUG_PARSER: Parsing expression. Current token: 17
. Line and column: 18 28
DEBUG_PARSER: Parsing primary expression. Current token: 17
 Line and column: 18 28
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 18 35
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 18 36
DEBUG_SYMTABLE: symtable_search called with key: str1.test_strings
DEBUG_SYMTABLE: symtable_search called with key: str1.test_strings
DEBUG_SYMTABLE: symtable_search called with key: str1.test_strings
DEBUG_SYMTABLE: symtable_search called with key: str1.test_strings
DEBUG_SYMTABLE: Inserted symbol: 'str1.test_strings' at index: 38
DEBUG_PARSER: Parsing variable declaration
DEBUG_PARSER: Expected token: 22, got token: 22
Line and column: 19 15
DEBUG_PARSER: Parsing expression. Current token: 14
. Line and column: 19 17
DEBUG_PARSER: Parsing primary expression. Current token: 14
 Line and column: 19 17
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 19 20
!!!!DEBUG_PARSER: Recognized identifier: string
!!!!DEBUG_PARSER: Recognized builtin function: string
DEBUG_SYMTABLE: symtable_search called with key: ifj.string
DEBUG_SYMTABLE: symtable_search called with key: ifj.string
DEBUG_SYMTABLE: Comparing key: 'ifj.string' with symbol: 'sum.test_numbers'
DEBUG_SYMTABLE: Comparing key: 'ifj.string' with symbol: 'ifj.string'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 19 27
DEBUG_PARSER: Function return index: 6
DEBUG_PARSER: Parsing expression. Current token: 17
. Line and column: 19 28
DEBUG_PARSER: Parsing primary expression. Current token: 17
 Line and column: 19 28
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 19 50
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 19 51
DEBUG_SYMTABLE: symtable_search called with key: str2.test_strings
DEBUG_SYMTABLE: symtable_search called with key: str2.test_strings
DEBUG_SYMTABLE: symtable_search called with key: str2.test_strings
DEBUG_SYMTABLE: symtable_search called with key: str2.test_strings
DEBUG_SYMTABLE: Inserted symbol: 'str2.test_strings' at index: 7
DEBUG_PARSER: Parsing variable declaration
DEBUG_PARSER: Expected token: 22, got token: 22
Line and column: 20 17
DEBUG_PARSER: Parsing expression. Current token: 14
. Line and column: 20 19
DEBUG_PARSER: Parsing primary expression. Current token: 14
 Line and column: 20 19
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 20 22
!!!!DEBUG_PARSER: Recognized identifier: concat
!!!!DEBUG_PARSER: Recognized builtin function: concat
DEBUG_SYMTABLE: symtable_search called with key: ifj.concat
DEBUG_SYMTABLE: symtable_search called with key: ifj.concat
DEBUG_SYMTABLE: Comparing key: 'ifj.concat' with symbol: 'ifj.concat'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 20 29
DEBUG_PARSER: Function return index: 6
DEBUG_PARSER: Parsing expression. Current token: 14
. Line and column: 20 30
DEBUG_PARSER: Parsing primary expression. Current token: 14
 Line and column: 20 30
DEBUG_SYMTABLE: symtable_search called with key: str1
DEBUG_SYMTABLE: symtable_search called with key: str1
DEBUG_SYMTABLE: Comparing key: 'str1' with symbol: 'product.test_numbers'
DEBUG_SYMTABLE: Comparing key: 'str1' with symbol: 'a.test_numbers'
DEBUG_SYMTABLE: symtable_search called with key: str1.test_strings
DEBUG_SYMTABLE: symtable_search called with key: str1.test_strings
DEBUG_SYMTABLE: Comparing key: 'str1.test_strings' with symbol: 'str1.test_strings'
DEBUG_PARSER: Parsing expression. Current token: 14
. Line and column: 20 36
DEBUG_PARSER: Parsing primary expression. Current token: 14
 Line and column: 20 36
DEBUG_SYMTABLE: symtable_search called with key: str2
DEBUG_SYMTABLE: symtable_search called with key: str2
DEBUG_SYMTABLE: symtable_search called with key: str2.test_strings
DEBUG_SYMTABLE: symtable_search called with key: str2.test_strings
DEBUG_SYMTABLE: Comparing key: 'str2.test_strings' with symbol: 'str2.test_strings'
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 20 40
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 20 41
DEBUG_SYMTABLE: symtable_search called with key: result.test_strings
DEBUG_SYMTABLE: symtable_search called with key: result.test_strings
DEBUG_SYMTABLE: symtable_search called with key: result.test_strings
DEBUG_SYMTABLE: symtable_search called with key: result.test_strings
DEBUG_SYMTABLE: Inserted symbol: 'result.test_strings' at index: 27
DEBUG_PARSER: Parsing variable assigning
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 21 7
!!!!DEBUG_PARSER: Recognized identifier: write
!!!!DEBUG_PARSER: Recognized builtin function: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: Comparing key: 'write' with symbol: 'b.test_numbers'
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'ifj.write'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 21 13
DEBUG_PARSER: Function return index: 4
DEBUG_PARSER: Parsing expression. Current token: 17
. Line and column: 21 14
DEBUG_PARSER: Parsing primary expression. Current token: 17
 Line and column: 21 14
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 21 37
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 21 38
DEBUG_PARSER: Parsing variable assigning
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 21 43
!!!!DEBUG_PARSER: Recognized identifier: write
!!!!DEBUG_PARSER: Recognized builtin function: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: Comparing key: 'write' with symbol: 'b.test_numbers'
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'ifj.write'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 21 49
DEBUG_PARSER: Function return index: 4
DEBUG_PARSER: Parsing expression. Current token: 14
. Line and column: 21 50
DEBUG_PARSER: Parsing primary expression. Current token: 14
 Line and column: 21 50
DEBUG_SYMTABLE: symtable_search called with key: result
DEBUG_SYMTABLE: symtable_search called with key: result
DEBUG_SYMTABLE: Comparing key: 'result' with symbol: 'ifj.concat'
DEBUG_SYMTABLE: Comparing key: 'result' with symbol: '_'
DEBUG_SYMTABLE: symtable_search called with key: result.test_strings
DEBUG_SYMTABLE: symtable_search called with key: result.test_strings
DEBUG_SYMTABLE: Comparing key: 'result.test_strings' with symbol: 'result.test_strings'
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 21 56
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 21 57
DEBUG_PARSER: Parsing variable assigning
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 21 62
!!!!DEBUG_PARSER: Recognized identifier: write
!!!!DEBUG_PARSER: Recognized builtin function: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: Comparing key: 'write' with symbol: 'b.test_numbers'
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'ifj.write'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 21 68
DEBUG_PARSER: Function return index: 4
DEBUG_PARSER: Parsing expression. Current token: 17
. Line and column: 21 70
DEBUG_PARSER: Parsing primary expression. Current token: 17
 Line and column: 21 70
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 21 73
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 21 74
DEBUG_PARSER: Expected token: 32, got token: 32
Line and column: 22 0
DEBUG_PARSER: Parsing function
DEBUG_PARSER: Expected token: 7, got token: 7
Line and column: 25 0
DEBUG_PARSER: Expected token: 6, got token: 6
Line and column: 25 4
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 25 22
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 25 23
DEBUG_PARSER: Parsing block
DEBUG_PARSER: Expected token: 31, got token: 31
Line and column: 25 30
DEBUG_PARSER: Parsing variable assigning
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 26 7
!!!!DEBUG_PARSER: Recognized identifier: write
!!!!DEBUG_PARSER: Recognized builtin function: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: Comparing key: 'write' with symbol: 'b.test_numbers'
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'ifj.write'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 26 13
DEBUG_PARSER: Function return index: 4
DEBUG_PARSER: Parsing expression. Current token: 17
. Line and column: 26 16
DEBUG_PARSER: Parsing primary expression. Current token: 17
 Line and column: 26 16
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 26 42
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 26 43
DEBUG_PARSER: Parsing variable declaration
DEBUG_PARSER: Expected token: 22, got token: 22
Line and column: 27 15
DEBUG_PARSER: Parsing expression. Current token: 14
. Line and column: 27 17
DEBUG_PARSER: Parsing primary expression. Current token: 14
 Line and column: 27 17
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 27 20
!!!!DEBUG_PARSER: Recognized identifier: string
!!!!DEBUG_PARSER: Recognized builtin function: string
DEBUG_SYMTABLE: symtable_search called with key: ifj.string
DEBUG_SYMTABLE: symtable_search called with key: ifj.string
DEBUG_SYMTABLE: Comparing key: 'ifj.string' with symbol: 'sum.test_numbers'
DEBUG_SYMTABLE: Comparing key: 'ifj.string' with symbol: 'ifj.string'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 27 27
DEBUG_PARSER: Function return index: 6
DEBUG_PARSER: Parsing expression. Current token: 17
. Line and column: 27 28
DEBUG_PARSER: Parsing primary expression. Current token: 17
 Line and column: 27 28
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 27 56
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 27 57
DEBUG_SYMTABLE: symtable_search called with key: text.test_substrings
DEBUG_SYMTABLE: symtable_search called with key: text.test_substrings
DEBUG_SYMTABLE: symtable_search called with key: text.test_substrings
DEBUG_SYMTABLE: symtable_search called with key: text.test_substrings
DEBUG_SYMTABLE: Inserted symbol: 'text.test_substrings' at index: 43
DEBUG_PARSER: Parsing variable declaration
DEBUG_PARSER: Expected token: 22, got token: 22
Line and column: 28 17
DEBUG_PARSER: Parsing expression. Current token: 14
. Line and column: 28 19
DEBUG_PARSER: Parsing primary expression. Current token: 14
 Line and column: 28 19
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 28 22
!!!!DEBUG_PARSER: Recognized identifier: substring
!!!!DEBUG_PARSER: Recognized builtin function: substring
DEBUG_SYMTABLE: symtable_search called with key: ifj.substring
DEBUG_SYMTABLE: symtable_search called with key: ifj.substring
DEBUG_SYMTABLE: Comparing key: 'ifj.substring' with symbol: 'ifj.substring'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 28 32
DEBUG_PARSER: Function return index: 10
DEBUG_PARSER: Parsing expression. Current token: 14
. Line and column: 28 33
DEBUG_PARSER: Parsing primary expression. Current token: 14
 Line and column: 28 33
DEBUG_SYMTABLE: symtable_search called with key: text
DEBUG_SYMTABLE: symtable_search called with key: text
DEBUG_SYMTABLE: symtable_search called with key: text.test_substrings
DEBUG_SYMTABLE: symtable_search called with key: text.test_substrings
DEBUG_SYMTABLE: Comparing key: 'text.test_substrings' with symbol: 'text.test_substrings'
DEBUG_PARSER: Parsing expression. Current token: 15
. Line and column: 28 39
DEBUG_PARSER: Parsing primary expression. Current token: 15
 Line and column: 28 39
DEBUG_PARSER: Parsing expression. Current token: 15
. Line and column: 28 42
DEBUG_PARSER: Parsing primary expression. Current token: 15
 Line and column: 28 42
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 28 44
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 28 45
DEBUG_SYMTABLE: symtable_search called with key: substr.test_substrings
DEBUG_SYMTABLE: symtable_search called with key: substr.test_substrings
DEBUG_SYMTABLE: symtable_search called with key: substr.test_substrings
DEBUG_SYMTABLE: symtable_search called with key: substr.test_substrings
DEBUG_SYMTABLE: Inserted symbol: 'substr.test_substrings' at index: 41
DEBUG_PARSER: Parsing if statement
DEBUG_PARSER: Expected token: 2, got token: 2
Line and column: 29 4
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 29 7
DEBUG_PARSER: Parsing expression. Current token: 14
. Line and column: 29 8
DEBUG_PARSER: Parsing primary expression. Current token: 14
 Line and column: 29 8
DEBUG_SYMTABLE: symtable_search called with key: substr
DEBUG_SYMTABLE: symtable_search called with key: substr
DEBUG_SYMTABLE: symtable_search called with key: substr.test_substrings
DEBUG_SYMTABLE: symtable_search called with key: substr.test_substrings
DEBUG_SYMTABLE: Comparing key: 'substr.test_substrings' with symbol: 'substr.test_substrings'
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 29 14
DEBUG_SYMTABLE: symtable_search called with key: sub
DEBUG_SYMTABLE: symtable_search called with key: sub
DEBUG_SYMTABLE: symtable_search called with key: sub.test_substrings
DEBUG_SYMTABLE: symtable_search called with key: sub.test_substrings
DEBUG_SYMTABLE: Inserted symbol: 'sub.test_substrings' at index: 48
DEBUG_PARSER: Expected token: 38, got token: 38
Line and column: 29 20
DEBUG_PARSER: Parsing block
DEBUG_PARSER: Expected token: 31, got token: 31
Line and column: 29 22
DEBUG_PARSER: Parsing variable assigning
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 30 11
!!!!DEBUG_PARSER: Recognized identifier: write
!!!!DEBUG_PARSER: Recognized builtin function: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: Comparing key: 'write' with symbol: 'b.test_numbers'
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'ifj.write'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 30 17
DEBUG_PARSER: Function return index: 4
DEBUG_PARSER: Parsing expression. Current token: 17
. Line and column: 30 18
DEBUG_PARSER: Parsing primary expression. Current token: 17
 Line and column: 30 18
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 30 31
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 30 32
DEBUG_PARSER: Parsing variable assigning
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 30 37
!!!!DEBUG_PARSER: Recognized identifier: write
!!!!DEBUG_PARSER: Recognized builtin function: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: Comparing key: 'write' with symbol: 'b.test_numbers'
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'ifj.write'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 30 43
DEBUG_PARSER: Function return index: 4
DEBUG_PARSER: Parsing expression. Current token: 14
. Line and column: 30 44
DEBUG_PARSER: Parsing primary expression. Current token: 14
 Line and column: 30 44
DEBUG_SYMTABLE: symtable_search called with key: sub
DEBUG_SYMTABLE: symtable_search called with key: sub
DEBUG_SYMTABLE: symtable_search called with key: sub.test_substrings
DEBUG_SYMTABLE: symtable_search called with key: sub.test_substrings
DEBUG_SYMTABLE: Comparing key: 'sub.test_substrings' with symbol: 'sub.test_substrings'
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 30 47
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 30 48
DEBUG_PARSER: Parsing variable assigning
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 30 53
!!!!DEBUG_PARSER: Recognized identifier: write
!!!!DEBUG_PARSER: Recognized builtin function: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: Comparing key: 'write' with symbol: 'b.test_numbers'
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'ifj.write'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 30 59
DEBUG_PARSER: Function return index: 4
DEBUG_PARSER: Parsing expression. Current token: 17
. Line and column: 30 61
DEBUG_PARSER: Parsing primary expression. Current token: 17
 Line and column: 30 61
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 30 64
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 30 65
DEBUG_PARSER: Expected token: 32, got token: 32
Line and column: 31 4
DEBUG_PARSER: Parsing block
DEBUG_PARSER: Expected token: 31, got token: 31
Line and column: 31 11
DEBUG_PARSER: Parsing variable assigning
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 32 11
!!!!DEBUG_PARSER: Recognized identifier: write
!!!!DEBUG_PARSER: Recognized builtin function: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: Comparing key: 'write' with symbol: 'b.test_numbers'
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'ifj.write'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 32 17
DEBUG_PARSER: Function return index: 4
DEBUG_PARSER: Parsing expression. Current token: 17
. Line and column: 32 19
DEBUG_PARSER: Parsing primary expression. Current token: 17
 Line and column: 32 19
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 32 49
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 32 50
DEBUG_PARSER: Expected token: 32, got token: 32
Line and column: 33 4
DEBUG_PARSER: Expected token: 32, got token: 32
Line and column: 34 0
DEBUG_PARSER: Parsing function
DEBUG_PARSER: Expected token: 7, got token: 7
Line and column: 37 0
DEBUG_PARSER: Expected token: 6, got token: 6
Line and column: 37 4
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 37 17
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 37 18
DEBUG_PARSER: Parsing block
DEBUG_PARSER: Expected token: 31, got token: 31
Line and column: 37 25
DEBUG_PARSER: Parsing variable assigning
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 38 7
!!!!DEBUG_PARSER: Recognized identifier: write
!!!!DEBUG_PARSER: Recognized builtin function: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: Comparing key: 'write' with symbol: 'b.test_numbers'
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'ifj.write'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 38 13
DEBUG_PARSER: Function return index: 4
DEBUG_PARSER: Parsing expression. Current token: 17
. Line and column: 38 16
DEBUG_PARSER: Parsing primary expression. Current token: 17
 Line and column: 38 16
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 38 38
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 38 39
DEBUG_PARSER: Parsing variable declaration
DEBUG_PARSER: Expected token: 22, got token: 22
Line and column: 39 19
DEBUG_PARSER: Parsing expression. Current token: 15
. Line and column: 39 21
DEBUG_PARSER: Parsing primary expression. Current token: 15
 Line and column: 39 21
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 39 22
DEBUG_SYMTABLE: symtable_search called with key: count.test_loops
DEBUG_SYMTABLE: symtable_search called with key: count.test_loops
DEBUG_SYMTABLE: symtable_search called with key: count.test_loops
DEBUG_SYMTABLE: symtable_search called with key: count.test_loops
DEBUG_SYMTABLE: Inserted symbol: 'count.test_loops' at index: 8
DEBUG_PARSER: Parsing while statement
DEBUG_PARSER: Expected token: 4, got token: 4
Line and column: 40 4
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 40 10
DEBUG_PARSER: Parsing expression. Current token: 14
. Line and column: 40 11
DEBUG_PARSER: Parsing primary expression. Current token: 14
 Line and column: 40 11
DEBUG_SYMTABLE: symtable_search called with key: count
DEBUG_SYMTABLE: symtable_search called with key: count
DEBUG_SYMTABLE: Comparing key: 'count' with symbol: 'test_strings'
DEBUG_SYMTABLE: symtable_search called with key: count.test_loops
DEBUG_SYMTABLE: symtable_search called with key: count.test_loops
DEBUG_SYMTABLE: Comparing key: 'count.test_loops' with symbol: 'count.test_loops'
DEBUG_PARSER: Parsing primary expression. Current token: 15
 Line and column: 40 19
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 40 20
DEBUG_PARSER: Parsing block
DEBUG_PARSER: Expected token: 31, got token: 31
Line and column: 40 22
DEBUG_PARSER: Parsing variable assigning
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 41 11
!!!!DEBUG_PARSER: Recognized identifier: write
!!!!DEBUG_PARSER: Recognized builtin function: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: Comparing key: 'write' with symbol: 'b.test_numbers'
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'ifj.write'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 41 17
DEBUG_PARSER: Function return index: 4
DEBUG_PARSER: Parsing expression. Current token: 17
. Line and column: 41 18
DEBUG_PARSER: Parsing primary expression. Current token: 17
 Line and column: 41 18
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 41 29
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 41 30
DEBUG_PARSER: Parsing variable assigning
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 41 35
!!!!DEBUG_PARSER: Recognized identifier: write
!!!!DEBUG_PARSER: Recognized builtin function: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: Comparing key: 'write' with symbol: 'b.test_numbers'
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'ifj.write'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 41 41
DEBUG_PARSER: Function return index: 4
DEBUG_PARSER: Parsing expression. Current token: 14
. Line and column: 41 42
DEBUG_PARSER: Parsing primary expression. Current token: 14
 Line and column: 41 42
DEBUG_SYMTABLE: symtable_search called with key: count
DEBUG_SYMTABLE: symtable_search called with key: count
DEBUG_SYMTABLE: Comparing key: 'count' with symbol: 'test_strings'
DEBUG_SYMTABLE: symtable_search called with key: count.test_loops
DEBUG_SYMTABLE: symtable_search called with key: count.test_loops
DEBUG_SYMTABLE: Comparing key: 'count.test_loops' with symbol: 'count.test_loops'
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 41 47
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 41 48
DEBUG_PARSER: Parsing variable assigning
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 41 53
!!!!DEBUG_PARSER: Recognized identifier: write
!!!!DEBUG_PARSER: Recognized builtin function: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: Comparing key: 'write' with symbol: 'b.test_numbers'
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'ifj.write'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 41 59
DEBUG_PARSER: Function return index: 4
DEBUG_PARSER: Parsing expression. Current token: 17
. Line and column: 41 61
DEBUG_PARSER: Parsing primary expression. Current token: 17
 Line and column: 41 61
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 41 64
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 41 65
DEBUG_PARSER: Parsing variable assigning
DEBUG_SYMTABLE: symtable_search called with key: count
DEBUG_SYMTABLE: symtable_search called with key: count
DEBUG_SYMTABLE: Comparing key: 'count' with symbol: 'test_strings'
DEBUG_SYMTABLE: symtable_search called with key: count.test_loops
DEBUG_SYMTABLE: symtable_search called with key: count.test_loops
DEBUG_SYMTABLE: Comparing key: 'count.test_loops' with symbol: 'count.test_loops'
DEBUG_PARSER: Expected token: 22, got token: 22
Line and column: 42 14
DEBUG_PARSER: Parsing expression. Current token: 14
. Line and column: 42 16
DEBUG_PARSER: Parsing primary expression. Current token: 14
 Line and column: 42 16
DEBUG_SYMTABLE: symtable_search called with key: count
DEBUG_SYMTABLE: symtable_search called with key: count
DEBUG_SYMTABLE: Comparing key: 'count' with symbol: 'test_strings'
DEBUG_SYMTABLE: symtable_search called with key: count.test_loops
DEBUG_SYMTABLE: symtable_search called with key: count.test_loops
DEBUG_SYMTABLE: Comparing key: 'count.test_loops' with symbol: 'count.test_loops'
DEBUG_PARSER: Parsing primary expression. Current token: 15
 Line and column: 42 24
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 42 25
DEBUG_PARSER: Expected token: 32, got token: 32
Line and column: 43 4
DEBUG_PARSER: Expected token: 32, got token: 32
Line and column: 44 0
DEBUG_PARSER: Parsing function
DEBUG_PARSER: Expected token: 7, got token: 7
Line and column: 47 0
DEBUG_PARSER: Expected token: 6, got token: 6
Line and column: 47 4
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 47 25
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 47 26
DEBUG_PARSER: Parsing block
DEBUG_PARSER: Expected token: 31, got token: 31
Line and column: 47 33
DEBUG_PARSER: Parsing variable assigning
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 48 7
!!!!DEBUG_PARSER: Recognized identifier: write
!!!!DEBUG_PARSER: Recognized builtin function: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: Comparing key: 'write' with symbol: 'b.test_numbers'
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'ifj.write'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 48 13
DEBUG_PARSER: Function return index: 4
DEBUG_PARSER: Parsing expression. Current token: 17
. Line and column: 48 16
DEBUG_PARSER: Parsing primary expression. Current token: 17
 Line and column: 48 16
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 48 46
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 48 47
DEBUG_PARSER: Parsing variable declaration
DEBUG_PARSER: Expected token: 22, got token: 22
Line and column: 49 23
DEBUG_PARSER: Parsing expression. Current token: 9
. Line and column: 49 25
DEBUG_PARSER: Parsing primary expression. Current token: 9
 Line and column: 49 25
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 49 29
DEBUG_SYMTABLE: symtable_search called with key: optional.test_null_handling
DEBUG_SYMTABLE: symtable_search called with key: optional.test_null_handling
DEBUG_SYMTABLE: Comparing key: 'optional.test_null_handling' with symbol: 'ifj.write'
DEBUG_SYMTABLE: symtable_search called with key: optional.test_null_handling
DEBUG_SYMTABLE: symtable_search called with key: optional.test_null_handling
DEBUG_SYMTABLE: Comparing key: 'optional.test_null_handling' with existing symbol: 'ifj.write'
DEBUG_SYMTABLE: Inserted symbol: 'optional.test_null_handling' at index: 55
DEBUG_PARSER: Parsing if statement
DEBUG_PARSER: Expected token: 2, got token: 2
Line and column: 51 4
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 51 7
DEBUG_PARSER: Parsing expression. Current token: 14
. Line and column: 51 8
DEBUG_PARSER: Parsing primary expression. Current token: 14
 Line and column: 51 8
DEBUG_SYMTABLE: symtable_search called with key: optional
DEBUG_SYMTABLE: symtable_search called with key: optional
DEBUG_SYMTABLE: symtable_search called with key: optional.test_null_handling
DEBUG_SYMTABLE: symtable_search called with key: optional.test_null_handling
DEBUG_SYMTABLE: Comparing key: 'optional.test_null_handling' with symbol: 'optional.test_null_handling'
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 51 16
DEBUG_SYMTABLE: symtable_search called with key: value
DEBUG_SYMTABLE: symtable_search called with key: value
DEBUG_SYMTABLE: symtable_search called with key: value.test_null_handling
DEBUG_SYMTABLE: symtable_search called with key: value.test_null_handling
DEBUG_SYMTABLE: Comparing key: 'value.test_null_handling' with existing symbol: 'ifj.length'
DEBUG_SYMTABLE: Inserted symbol: 'value.test_null_handling' at index: 14
DEBUG_PARSER: Expected token: 38, got token: 38
Line and column: 51 24
DEBUG_PARSER: Parsing block
DEBUG_PARSER: Expected token: 31, got token: 31
Line and column: 51 26
DEBUG_PARSER: Parsing variable assigning
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 52 11
!!!!DEBUG_PARSER: Recognized identifier: write
!!!!DEBUG_PARSER: Recognized builtin function: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: Comparing key: 'write' with symbol: 'b.test_numbers'
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'optional.test_null_handling'
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'ifj.write'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 52 17
DEBUG_PARSER: Function return index: 4
DEBUG_PARSER: Parsing expression. Current token: 17
. Line and column: 52 18
DEBUG_PARSER: Parsing primary expression. Current token: 17
 Line and column: 52 18
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 52 27
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 52 28
DEBUG_PARSER: Parsing variable assigning
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 52 33
!!!!DEBUG_PARSER: Recognized identifier: write
!!!!DEBUG_PARSER: Recognized builtin function: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: Comparing key: 'write' with symbol: 'b.test_numbers'
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'optional.test_null_handling'
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'ifj.write'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 52 39
DEBUG_PARSER: Function return index: 4
DEBUG_PARSER: Parsing expression. Current token: 14
. Line and column: 52 40
DEBUG_PARSER: Parsing primary expression. Current token: 14
 Line and column: 52 40
DEBUG_SYMTABLE: symtable_search called with key: value
DEBUG_SYMTABLE: symtable_search called with key: value
DEBUG_SYMTABLE: symtable_search called with key: value.test_null_handling
DEBUG_SYMTABLE: symtable_search called with key: value.test_null_handling
DEBUG_SYMTABLE: Comparing key: 'value.test_null_handling' with symbol: 'value.test_null_handling'
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 52 45
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 52 46
DEBUG_PARSER: Parsing variable assigning
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 52 51
!!!!DEBUG_PARSER: Recognized identifier: write
!!!!DEBUG_PARSER: Recognized builtin function: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: Comparing key: 'write' with symbol: 'b.test_numbers'
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'optional.test_null_handling'
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'ifj.write'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 52 57
DEBUG_PARSER: Function return index: 4
DEBUG_PARSER: Parsing expression. Current token: 17
. Line and column: 52 59
DEBUG_PARSER: Parsing primary expression. Current token: 17
 Line and column: 52 59
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 52 62
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 52 63
DEBUG_PARSER: Expected token: 32, got token: 32
Line and column: 53 4
DEBUG_PARSER: Parsing block
DEBUG_PARSER: Expected token: 31, got token: 31
Line and column: 53 11
DEBUG_PARSER: Parsing variable assigning
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 54 11
!!!!DEBUG_PARSER: Recognized identifier: write
!!!!DEBUG_PARSER: Recognized builtin function: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: Comparing key: 'write' with symbol: 'b.test_numbers'
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'optional.test_null_handling'
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'ifj.write'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 54 17
DEBUG_PARSER: Function return index: 4
DEBUG_PARSER: Parsing expression. Current token: 17
. Line and column: 54 19
DEBUG_PARSER: Parsing primary expression. Current token: 17
 Line and column: 54 19
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 54 46
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 54 47
DEBUG_PARSER: Expected token: 32, got token: 32
Line and column: 55 4
DEBUG_PARSER: Parsing variable assigning
DEBUG_SYMTABLE: symtable_search called with key: optional
DEBUG_SYMTABLE: symtable_search called with key: optional
DEBUG_SYMTABLE: symtable_search called with key: optional.test_null_handling
DEBUG_SYMTABLE: symtable_search called with key: optional.test_null_handling
DEBUG_SYMTABLE: Comparing key: 'optional.test_null_handling' with symbol: 'optional.test_null_handling'
DEBUG_PARSER: Expected token: 22, got token: 22
Line and column: 57 13
DEBUG_PARSER: Parsing expression. Current token: 15
. Line and column: 57 15
DEBUG_PARSER: Parsing primary expression. Current token: 15
 Line and column: 57 15
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 57 17
DEBUG_PARSER: Parsing if statement
DEBUG_PARSER: Expected token: 2, got token: 2
Line and column: 58 4
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 58 7
DEBUG_PARSER: Parsing expression. Current token: 14
. Line and column: 58 8
DEBUG_PARSER: Parsing primary expression. Current token: 14
 Line and column: 58 8
DEBUG_SYMTABLE: symtable_search called with key: optional
DEBUG_SYMTABLE: symtable_search called with key: optional
DEBUG_SYMTABLE: symtable_search called with key: optional.test_null_handling
DEBUG_SYMTABLE: symtable_search called with key: optional.test_null_handling
DEBUG_SYMTABLE: Comparing key: 'optional.test_null_handling' with symbol: 'optional.test_null_handling'
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 58 16
DEBUG_SYMTABLE: symtable_search called with key: value
DEBUG_SYMTABLE: symtable_search called with key: value
DEBUG_SYMTABLE: symtable_search called with key: value.test_null_handling
DEBUG_SYMTABLE: symtable_search called with key: value.test_null_handling
DEBUG_SYMTABLE: Comparing key: 'value.test_null_handling' with existing symbol: 'value.test_null_handling'
DEBUG_PARSER: Expected token: 38, got token: 38
Line and column: 58 24
DEBUG_PARSER: Parsing block
DEBUG_PARSER: Expected token: 31, got token: 31
Line and column: 58 26
DEBUG_PARSER: Parsing variable assigning
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 59 11
!!!!DEBUG_PARSER: Recognized identifier: write
!!!!DEBUG_PARSER: Recognized builtin function: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: Comparing key: 'write' with symbol: 'b.test_numbers'
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'optional.test_null_handling'
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'ifj.write'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 59 17
DEBUG_PARSER: Function return index: 4
DEBUG_PARSER: Parsing expression. Current token: 17
. Line and column: 59 18
DEBUG_PARSER: Parsing primary expression. Current token: 17
 Line and column: 59 18
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 59 31
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 59 32
DEBUG_PARSER: Parsing variable assigning
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 59 37
!!!!DEBUG_PARSER: Recognized identifier: write
!!!!DEBUG_PARSER: Recognized builtin function: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: Comparing key: 'write' with symbol: 'b.test_numbers'
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'optional.test_null_handling'
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'ifj.write'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 59 43
DEBUG_PARSER: Function return index: 4
DEBUG_PARSER: Parsing expression. Current token: 14
. Line and column: 59 44
DEBUG_PARSER: Parsing primary expression. Current token: 14
 Line and column: 59 44
DEBUG_SYMTABLE: symtable_search called with key: value
DEBUG_SYMTABLE: symtable_search called with key: value
DEBUG_SYMTABLE: symtable_search called with key: value.test_null_handling
DEBUG_SYMTABLE: symtable_search called with key: value.test_null_handling
DEBUG_SYMTABLE: Comparing key: 'value.test_null_handling' with symbol: 'value.test_null_handling'
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 59 49
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 59 50
DEBUG_PARSER: Parsing variable assigning
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 59 55
!!!!DEBUG_PARSER: Recognized identifier: write
!!!!DEBUG_PARSER: Recognized builtin function: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: Comparing key: 'write' with symbol: 'b.test_numbers'
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'optional.test_null_handling'
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'ifj.write'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 59 61
DEBUG_PARSER: Function return index: 4
DEBUG_PARSER: Parsing expression. Current token: 17
. Line and column: 59 63
DEBUG_PARSER: Parsing primary expression. Current token: 17
 Line and column: 59 63
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 59 66
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 59 67
DEBUG_PARSER: Expected token: 32, got token: 32
Line and column: 60 4
DEBUG_PARSER: Expected token: 32, got token: 32
Line and column: 61 0
DEBUG_PARSER: Parsing function
DEBUG_PARSER: Expected token: 7, got token: 7
Line and column: 64 0
DEBUG_PARSER: Expected token: 6, got token: 6
Line and column: 64 4
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 64 11
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 64 12
DEBUG_PARSER: Parsing block
DEBUG_PARSER: Expected token: 31, got token: 31
Line and column: 64 19
DEBUG_PARSER: Parsing variable assigning
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 65 7
!!!!DEBUG_PARSER: Recognized identifier: write
!!!!DEBUG_PARSER: Recognized builtin function: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: Comparing key: 'write' with symbol: 'b.test_numbers'
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'optional.test_null_handling'
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'ifj.write'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 65 13
DEBUG_PARSER: Function return index: 4
DEBUG_PARSER: Parsing expression. Current token: 17
. Line and column: 65 15
DEBUG_PARSER: Parsing primary expression. Current token: 17
 Line and column: 65 15
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 65 57
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 65 58
DEBUG_PARSER: Parsing variable assigning
DEBUG_SYMTABLE: symtable_search called with key: test_numbers
DEBUG_SYMTABLE: symtable_search called with key: test_numbers
DEBUG_SYMTABLE: Comparing key: 'test_numbers' with symbol: 'test_numbers'
DEBUG_SYMTABLE: symtable_search called with key: test_numbers
DEBUG_SYMTABLE: symtable_search called with key: test_numbers
DEBUG_SYMTABLE: Comparing key: 'test_numbers' with symbol: 'test_numbers'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 68 16
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 68 17
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 68 18
DEBUG_PARSER: Parsing variable assigning
DEBUG_SYMTABLE: symtable_search called with key: test_strings
DEBUG_SYMTABLE: symtable_search called with key: test_strings
DEBUG_SYMTABLE: Comparing key: 'test_strings' with symbol: 'test_strings'
DEBUG_SYMTABLE: symtable_search called with key: test_strings
DEBUG_SYMTABLE: symtable_search called with key: test_strings
DEBUG_SYMTABLE: Comparing key: 'test_strings' with symbol: 'test_strings'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 71 16
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 71 17
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 71 18
DEBUG_PARSER: Parsing variable assigning
DEBUG_SYMTABLE: symtable_search called with key: test_substrings
DEBUG_SYMTABLE: symtable_search called with key: test_substrings
DEBUG_SYMTABLE: Comparing key: 'test_substrings' with symbol: 'test_substrings'
DEBUG_SYMTABLE: symtable_search called with key: test_substrings
DEBUG_SYMTABLE: symtable_search called with key: test_substrings
DEBUG_SYMTABLE: Comparing key: 'test_substrings' with symbol: 'test_substrings'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 74 19
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 74 20
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 74 21
DEBUG_PARSER: Parsing variable assigning
DEBUG_SYMTABLE: symtable_search called with key: test_loops
DEBUG_SYMTABLE: symtable_search called with key: test_loops
DEBUG_SYMTABLE: Comparing key: 'test_loops' with symbol: 'test_loops'
DEBUG_SYMTABLE: symtable_search called with key: test_loops
DEBUG_SYMTABLE: symtable_search called with key: test_loops
DEBUG_SYMTABLE: Comparing key: 'test_loops' with symbol: 'test_loops'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 77 14
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 77 15
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 77 16
DEBUG_PARSER: Parsing variable assigning
DEBUG_SYMTABLE: symtable_search called with key: test_null_handling
DEBUG_SYMTABLE: symtable_search called with key: test_null_handling
DEBUG_SYMTABLE: Comparing key: 'test_null_handling' with symbol: 'test_null_handling'
DEBUG_SYMTABLE: symtable_search called with key: test_null_handling
DEBUG_SYMTABLE: symtable_search called with key: test_null_handling
DEBUG_SYMTABLE: Comparing key: 'test_null_handling' with symbol: 'test_null_handling'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 80 22
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 80 23
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 80 24
DEBUG_PARSER: Parsing variable assigning
!!!!DEBUG_PARSER: Recognized 'ifj' keyword
DEBUG_PARSER: Expected token: 39, got token: 39
Line and column: 82 7
!!!!DEBUG_PARSER: Recognized identifier: write
!!!!DEBUG_PARSER: Recognized builtin function: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: symtable_search called with key: write
DEBUG_SYMTABLE: Comparing key: 'write' with symbol: 'b.test_numbers'
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: symtable_search called with key: ifj.write
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'optional.test_null_handling'
DEBUG_SYMTABLE: Comparing key: 'ifj.write' with symbol: 'ifj.write'
DEBUG_PARSER: Expected token: 29, got token: 29
Line and column: 82 13
DEBUG_PARSER: Function return index: 4
DEBUG_PARSER: Parsing expression. Current token: 17
. Line and column: 82 15
DEBUG_PARSER: Parsing primary expression. Current token: 17
 Line and column: 82 15
DEBUG_PARSER: Expected token: 30, got token: 30
Line and column: 82 40
DEBUG_PARSER: Expected token: 34, got token: 34
Line and column: 82 41
DEBUG_PARSER: Expected token: 32, got token: 32
Line and column: 83 0
DEBUG_SYMTABLE: symtable_search called with key: b.test_numbers
DEBUG_SYMTABLE: symtable_search called with key: b.test_numbers
DEBUG_SYMTABLE: Comparing key: 'b.test_numbers' with symbol: 'b.test_numbers'
DEBUG_SYMTABLE: symtable_search called with key: a.test_numbers
DEBUG_SYMTABLE: symtable_search called with key: a.test_numbers
DEBUG_SYMTABLE: Comparing key: 'a.test_numbers' with symbol: 'product.test_numbers'
DEBUG_SYMTABLE: Comparing key: 'a.test_numbers' with symbol: 'a.test_numbers'
DEBUG_SYMTABLE: symtable_search called with key: substr.test_substrings
DEBUG_SYMTABLE: symtable_search called with key: substr.test_substrings
DEBUG_SYMTABLE: Comparing key: 'substr.test_substrings' with symbol: 'substr.test_substrings'
DEBUG_SYMTABLE: symtable_search called with key: substr.test_substrings
DEBUG_SYMTABLE: symtable_search called with key: substr.test_substrings
DEBUG_SYMTABLE: Comparing key: 'substr.test_substrings' with symbol: 'substr.test_substrings'
DEBUG_SYMTABLE: symtable_search called with key: count.test_loops
DEBUG_SYMTABLE: symtable_search called with key: count.test_loops
DEBUG_SYMTABLE: Comparing key: 'count.test_loops' with symbol: 'count.test_loops'
DEBUG_SYMTABLE: symtable_search called with key: count.test_loops
DEBUG_SYMTABLE: symtable_search called with key: count.test_loops
DEBUG_SYMTABLE: Comparing key: 'count.test_loops' with symbol: 'count.test_loops'
DEBUG_SYMTABLE: symtable_search called with key: count.test_loops
DEBUG_SYMTABLE: symtable_search called with key: count.test_loops
DEBUG_SYMTABLE: Comparing key: 'count.test_loops' with symbol: 'count.test_loops'
DEBUG_SYMTABLE: symtable_search called with key: optional.test_null_handling
DEBUG_SYMTABLE: symtable_search called with key: optional.test_null_handling
DEBUG_SYMTABLE: Comparing key: 'optional.test_null_handling' with symbol: 'optional.test_null_handling'
DEBUG_SYMTABLE: symtable_search called with key: optional.test_null_handling
DEBUG_SYMTABLE: symtable_search called with key: optional.test_null_handling
DEBUG_SYMTABLE: Comparing key: 'optional.test_null_handling' with symbol: 'optional.test_null_handling'
DEBUG_SYMTABLE: symtable_search called with key: optional.test_null_handling
DEBUG_SYMTABLE: symtable_search called with key: optional.test_null_handling
DEBUG_SYMTABLE: Comparing key: 'optional.test_null_handling' with symbol: 'optional.test_null_handling'
DEBUG_SYMTABLE: symtable_search called with key: optional.test_null_handling
DEBUG_SYMTABLE: symtable_search called with key: optional.test_null_handling
DEBUG_SYMTABLE: Comparing key: 'optional.test_null_handling' with symbol: 'optional.test_null_handling'
DEBUG_SYMTABLE: symtable_search called with key: optional.test_null_handling
DEBUG_SYMTABLE: symtable_search called with key: optional.test_null_handling
DEBUG_SYMTABLE: Comparing key: 'optional.test_null_handling' with symbol: 'optional.test_null_handling'
Node type: PROGRAM
  Functions:
    - Function name: test_numbers, return type: 4
    - Function name: test_strings, return type: 4
    - Function name: test_substrings, return type: 4
    - Function name: test_loops, return type: 4
    - Function name: test_null_handling, return type: 4
    - Function name: main, return type: 4
  Body:
    Node type: FUNCTION
      Name: test_numbers, Return type: 4
      Body:
        Node type: BLOCK
          Body:
            Node type: FUNCTION_CALL
              Name: ifj.write, Arg count: 1
                Argument 1:
                  Node type: LITERAL
                    Value: 
--- Test numbers ---
, Data type: 6
            Next:
            Node type: VARIABLE_DECLARATION
              Name: a.test_numbers, Data type: 1
              Left:
                Node type: LITERAL
                  Value: 10, Data type: 1
            Next:
            Node type: VARIABLE_DECLARATION
              Name: b.test_numbers, Data type: 2
              Left:
                Node type: LITERAL
                  Value: 2.5, Data type: 2
            Next:
            Node type: VARIABLE_DECLARATION
              Name: sum.test_numbers, Data type: 2
              Left:
                Node type: BINARY_OPERATION
                  Data type: 2
                  Left:
                    Node type: FUNCTION_CALL
                      Name: ifj.i2f, Arg count: 1
                        Argument 1:
                          Node type: IDENTIFIER
                            Name: a.test_numbers
                  Right:
                    Node type: IDENTIFIER
                      Name: b.test_numbers
            Next:
            Node type: FUNCTION_CALL
              Name: ifj.write, Arg count: 1
                Argument 1:
                  Node type: LITERAL
                    Value: Sum of 10 and 2.5 is: , Data type: 6
            Next:
            Node type: FUNCTION_CALL
              Name: ifj.write, Arg count: 1
                Argument 1:
                  Node type: IDENTIFIER
                    Name: sum.test_numbers
            Next:
            Node type: FUNCTION_CALL
              Name: ifj.write, Arg count: 1
                Argument 1:
                  Node type: LITERAL
                    Value: 
, Data type: 6
            Next:
            Node type: VARIABLE_DECLARATION
              Name: product.test_numbers, Data type: 1
              Left:
                Node type: BINARY_OPERATION
                  Data type: 1
                  Left:
                    Node type: IDENTIFIER
                      Name: a.test_numbers
                  Right:
                    Node type: FUNCTION_CALL
                      Name: ifj.f2i, Arg count: 1
                        Argument 1:
                          Node type: IDENTIFIER
                            Name: b.test_numbers
            Next:
            Node type: FUNCTION_CALL
              Name: ifj.write, Arg count: 1
                Argument 1:
                  Node type: LITERAL
                    Value: Multiplication of 10 and 2 (round): , Data type: 6
            Next:
            Node type: FUNCTION_CALL
              Name: ifj.write, Arg count: 1
                Argument 1:
                  Node type: IDENTIFIER
                    Name: product.test_numbers
            Next:
            Node type: FUNCTION_CALL
              Name: ifj.write, Arg count: 1
                Argument 1:
                  Node type: LITERAL
                    Value: 
, Data type: 6
    Next:
    Node type: FUNCTION
      Name: test_strings, Return type: 4
      Body:
        Node type: BLOCK
          Body:
            Node type: FUNCTION_CALL
              Name: ifj.write, Arg count: 1
                Argument 1:
                  Node type: LITERAL
                    Value: 
--- Test strings ---
, Data type: 6
            Next:
            Node type: VARIABLE_DECLARATION
              Name: str1.test_strings, Data type: 6
              Left:
                Node type: FUNCTION_CALL
                  Name: ifj.string, Arg count: 1
                    Argument 1:
                      Node type: LITERAL
                        Value: IFJ24, Data type: 6
            Next:
            Node type: VARIABLE_DECLARATION
              Name: str2.test_strings, Data type: 6
              Left:
                Node type: FUNCTION_CALL
                  Name: ifj.string, Arg count: 1
                    Argument 1:
                      Node type: LITERAL
                        Value:  — great language., Data type: 6
            Next:
            Node type: VARIABLE_DECLARATION
              Name: result.test_strings, Data type: 6
              Left:
                Node type: FUNCTION_CALL
                  Name: ifj.concat, Arg count: 2
                    Argument 1:
                      Node type: IDENTIFIER
                        Name: str1.test_strings
                    Argument 2:
                      Node type: IDENTIFIER
                        Name: str2.test_strings
            Next:
            Node type: FUNCTION_CALL
              Name: ifj.write, Arg count: 1
                Argument 1:
                  Node type: LITERAL
                    Value: Concatenated string: , Data type: 6
            Next:
            Node type: FUNCTION_CALL
              Name: ifj.write, Arg count: 1
                Argument 1:
                  Node type: IDENTIFIER
                    Name: result.test_strings
            Next:
            Node type: FUNCTION_CALL
              Name: ifj.write, Arg count: 1
                Argument 1:
                  Node type: LITERAL
                    Value: 
, Data type: 6
    Next:
    Node type: FUNCTION
      Name: test_substrings, Return type: 4
      Body:
        Node type: BLOCK
          Body:
            Node type: FUNCTION_CALL
              Name: ifj.write, Arg count: 1
                Argument 1:
                  Node type: LITERAL
                    Value: 
--- Test substring ---
, Data type: 6
            Next:
            Node type: VARIABLE_DECLARATION
              Name: text.test_substrings, Data type: 6
              Left:
                Node type: FUNCTION_CALL
                  Name: ifj.string, Arg count: 1
                    Argument 1:
                      Node type: LITERAL
                        Value: Example text for substring, Data type: 6
            Next:
            Node type: VARIABLE_DECLARATION
              Name: substr.test_substrings, Data type: 10
              Left:
                Node type: FUNCTION_CALL
                  Name: ifj.substring, Arg count: 3
                    Argument 1:
                      Node type: IDENTIFIER
                        Name: text.test_substrings
                    Argument 2:
                      Node type: LITERAL
                        Value: 8, Data type: 1
                    Argument 3:
                      Node type: LITERAL
                        Value: 14, Data type: 1
            Next:
            Node type: IF
              Left:
                Node type: BLOCK
                  Body:
                    Node type: FUNCTION_CALL
                      Name: ifj.write, Arg count: 1
                        Argument 1:
                          Node type: LITERAL
                            Value: Error extracting substring.
, Data type: 6
              Condition:
                Node type: IDENTIFIER
                  Name: substr.test_substrings
              Body:
                Node type: BLOCK
                  Body:
                    Node type: VARIABLE_DECLARATION
                      Name: sub.test_substrings, Data type: 6
                      Left:
                        Node type: IDENTIFIER
                          Name: substr.test_substrings
                    Next:
                    Node type: FUNCTION_CALL
                      Name: ifj.write, Arg count: 1
                        Argument 1:
                          Node type: LITERAL
                            Value: Substring: , Data type: 6
                    Next:
                    Node type: FUNCTION_CALL
                      Name: ifj.write, Arg count: 1
                        Argument 1:
                          Node type: IDENTIFIER
                            Name: sub.test_substrings
                    Next:
                    Node type: FUNCTION_CALL
                      Name: ifj.write, Arg count: 1
                        Argument 1:
                          Node type: LITERAL
                            Value: 
, Data type: 6
    Next:
    Node type: FUNCTION
      Name: test_loops, Return type: 4
      Body:
        Node type: BLOCK
          Body:
            Node type: FUNCTION_CALL
              Name: ifj.write, Arg count: 1
                Argument 1:
                  Node type: LITERAL
                    Value: 
--- Test loops ---
, Data type: 6
            Next:
            Node type: VARIABLE_DECLARATION
              Name: count.test_loops, Data type: 1
              Left:
                Node type: LITERAL
                  Value: 5, Data type: 1
            Next:
            Node type: WHILE
              Condition:
                Node type: BINARY_OPERATION
                  Data type: 5
                  Left:
                    Node type: IDENTIFIER
                      Name: count.test_loops
                  Right:
                    Node type: LITERAL
                      Value: 0, Data type: 1
              Body:
                Node type: BLOCK
                  Body:
                    Node type: FUNCTION_CALL
                      Name: ifj.write, Arg count: 1
                        Argument 1:
                          Node type: LITERAL
                            Value: Counter: , Data type: 6
                    Next:
                    Node type: FUNCTION_CALL
                      Name: ifj.write, Arg count: 1
                        Argument 1:
                          Node type: IDENTIFIER
                            Name: count.test_loops
                    Next:
                    Node type: FUNCTION_CALL
                      Name: ifj.write, Arg count: 1
                        Argument 1:
                          Node type: LITERAL
                            Value: 
, Data type: 6
                    Next:
                    Node type: ASSIGNMENT
                      Variable: count.test_loops
                      Left:
                        Node type: BINARY_OPERATION
                          Data type: 1
                          Left:
                            Node type: IDENTIFIER
                              Name: count.test_loops
                          Right:
                            Node type: LITERAL
                              Value: 1, Data type: 1
    Next:
    Node type: FUNCTION
      Name: test_null_handling, Return type: 4
      Body:
        Node type: BLOCK
          Body:
            Node type: FUNCTION_CALL
              Name: ifj.write, Arg count: 1
                Argument 1:
                  Node type: LITERAL
                    Value: 
--- Test null handling ---
, Data type: 6
            Next:
            Node type: VARIABLE_DECLARATION
              Name: optional.test_null_handling, Data type: 8
              Left:
                Node type: LITERAL
                  Value: null, Data type: 0
            Next:
            Node type: IF
              Left:
                Node type: BLOCK
                  Body:
                    Node type: FUNCTION_CALL
                      Name: ifj.write, Arg count: 1
                        Argument 1:
                          Node type: LITERAL
                            Value: Value is missing (null).
, Data type: 6
              Condition:
                Node type: IDENTIFIER
                  Name: optional.test_null_handling
              Body:
                Node type: BLOCK
                  Body:
                    Node type: VARIABLE_DECLARATION
                      Name: value.test_null_handling, Data type: 1
                      Left:
                        Node type: IDENTIFIER
                          Name: optional.test_null_handling
                    Next:
                    Node type: FUNCTION_CALL
                      Name: ifj.write, Arg count: 1
                        Argument 1:
                          Node type: LITERAL
                            Value: Value: , Data type: 6
                    Next:
                    Node type: FUNCTION_CALL
                      Name: ifj.write, Arg count: 1
                        Argument 1:
                          Node type: IDENTIFIER
                            Name: value.test_null_handling
                    Next:
                    Node type: FUNCTION_CALL
                      Name: ifj.write, Arg count: 1
                        Argument 1:
                          Node type: LITERAL
                            Value: 
, Data type: 6
            Next:
            Node type: ASSIGNMENT
              Variable: optional.test_null_handling
              Left:
                Node type: LITERAL
                  Value: 42, Data type: 1
            Next:
            Node type: IF
              Condition:
                Node type: IDENTIFIER
                  Name: optional.test_null_handling
              Body:
                Node type: BLOCK
                  Body:
                    Node type: VARIABLE_DECLARATION
                      Name: value.test_null_handling, Data type: 1
                      Left:
                        Node type: IDENTIFIER
                          Name: optional.test_null_handling
                    Next:
                    Node type: FUNCTION_CALL
                      Name: ifj.write, Arg count: 1
                        Argument 1:
                          Node type: LITERAL
                            Value: New value: , Data type: 6
                    Next:
                    Node type: FUNCTION_CALL
                      Name: ifj.write, Arg count: 1
                        Argument 1:
                          Node type: IDENTIFIER
                            Name: value.test_null_handling
                    Next:
                    Node type: FUNCTION_CALL
                      Name: ifj.write, Arg count: 1
                        Argument 1:
                          Node type: LITERAL
                            Value: 
, Data type: 6
    Next:
    Node type: FUNCTION
      Name: main, Return type: 4
      Body:
        Node type: BLOCK
          Body:
            Node type: FUNCTION_CALL
              Name: ifj.write, Arg count: 1
                Argument 1:
                  Node type: LITERAL
                    Value: === Start of IFJ24 language testing ===
, Data type: 6
            Next:
            Node type: FUNCTION_CALL
              Name: test_numbers, Arg count: 0
            Next:
            Node type: FUNCTION_CALL
              Name: test_strings, Arg count: 0
            Next:
            Node type: FUNCTION_CALL
              Name: test_substrings, Arg count: 0
            Next:
            Node type: FUNCTION_CALL
              Name: test_loops, Arg count: 0
            Next:
            Node type: FUNCTION_CALL
              Name: test_null_handling, Arg count: 0
            Next:
            Node type: FUNCTION_CALL
              Name: ifj.write, Arg count: 1
                Argument 1:
                  Node type: LITERAL
                    Value: === End of testing ===
, Data type: 6
Next:
Node type: LITERAL
  Value: ifj24.zig, Data type: 6
.IFJcode24
CALL main
EXIT int@0
LABEL test_numbers
CREATEFRAME
PUSHFRAME
DEFVAR LF@%tmp_type
DEFVAR LF@%tmp_var
DEFVAR LF@%tmp_bool
DEFVAR LF@%tmp_var_0
DEFVAR LF@a
DEFVAR LF@b
DEFVAR LF@sum
DEFVAR LF@%tmp_var_1
DEFVAR LF@%tmp_var_2
DEFVAR LF@%tmp_var_3
DEFVAR LF@product
DEFVAR LF@%tmp_var_4
DEFVAR LF@%tmp_var_5
DEFVAR LF@%tmp_var_6
PUSHS string@\010---\032Test\032numbers\032---\010
POPS LF@%tmp_var_0
WRITE LF@%tmp_var_0
PUSHS int@10
POPS LF@a
PUSHS float@0x1.4000000000000p+1
POPS LF@b
PUSHS LF@a
DEFVAR LF@%-tmp-int-1
POPS LF@%-tmp-int-1
DEFVAR LF@%-retval-2
INT2FLOAT LF@%-retval-2 LF@%-tmp-int-1
PUSHS LF@%-retval-2
PUSHS LF@b
ADDS
POPS LF@sum
PUSHS string@Sum\032of\03210\032and\0322.5\032is:\032
POPS LF@%tmp_var_1
WRITE LF@%tmp_var_1
PUSHS LF@sum
POPS LF@%tmp_var_2
WRITE LF@%tmp_var_2
PUSHS string@\010
POPS LF@%tmp_var_3
WRITE LF@%tmp_var_3
PUSHS LF@a
PUSHS LF@b
DEFVAR LF@%-tmp-float-3
POPS LF@%-tmp-float-3
DEFVAR LF@%-retval-4
FLOAT2INT LF@%-retval-4 LF@%-tmp-float-3
PUSHS LF@%-retval-4
MULS
POPS LF@product
PUSHS string@Multiplication\032of\03210\032and\0322\032(round):\032
POPS LF@%tmp_var_4
WRITE LF@%tmp_var_4
PUSHS LF@product
POPS LF@%tmp_var_5
WRITE LF@%tmp_var_5
PUSHS string@\010
POPS LF@%tmp_var_6
WRITE LF@%tmp_var_6
POPFRAME
RETURN
LABEL test_strings
CREATEFRAME
PUSHFRAME
DEFVAR LF@%tmp_type
DEFVAR LF@%tmp_var
DEFVAR LF@%tmp_bool
DEFVAR LF@%tmp_var_0
DEFVAR LF@str1
DEFVAR LF@str2
DEFVAR LF@result
DEFVAR LF@%tmp_var_1
DEFVAR LF@%tmp_var_2
DEFVAR LF@%tmp_var_3
PUSHS string@\010---\032Test\032strings\032---\010
POPS LF@%tmp_var_0
WRITE LF@%tmp_var_0
PUSHS string@IFJ24
CALL ifj-string
POPS LF@str1
PUSHS string@\032\226\128\148\032great\032language.
CALL ifj-string
POPS LF@str2
PUSHS LF@str1
PUSHS LF@str2
DEFVAR LF@%-tmp-str2-6
POPS LF@%-tmp-str2-6
DEFVAR LF@%-tmp-str1-5
POPS LF@%-tmp-str1-5
DEFVAR LF@%-retval-7
CONCAT LF@%-retval-7 LF@%-tmp-str1-5 LF@%-tmp-str2-6
PUSHS LF@%-retval-7
POPS LF@result
PUSHS string@Concatenated\032string:\032
POPS LF@%tmp_var_1
WRITE LF@%tmp_var_1
PUSHS LF@result
POPS LF@%tmp_var_2
WRITE LF@%tmp_var_2
PUSHS string@\010
POPS LF@%tmp_var_3
WRITE LF@%tmp_var_3
POPFRAME
RETURN
LABEL test_substrings
CREATEFRAME
PUSHFRAME
DEFVAR LF@%tmp_type
DEFVAR LF@%tmp_var
DEFVAR LF@%tmp_bool
DEFVAR LF@%tmp_var_0
DEFVAR LF@text
DEFVAR LF@substr
DEFVAR LF@sub
DEFVAR LF@%tmp_var_1
DEFVAR LF@%tmp_var_2
DEFVAR LF@%tmp_var_3
DEFVAR LF@%tmp_var_4
PUSHS string@\010---\032Test\032substring\032---\010
POPS LF@%tmp_var_0
WRITE LF@%tmp_var_0
PUSHS string@Example\032text\032for\032substring
CALL ifj-string
POPS LF@text
PUSHS LF@text
PUSHS int@8
PUSHS int@14
CALL ifj-substring
POPS LF@substr
TYPE LF@%tmp_type LF@substr
JUMPIFEQ $else_0 LF@%tmp_type string@nil
PUSHS LF@substr
POPS LF@sub
PUSHS string@Substring:\032
POPS LF@%tmp_var_1
WRITE LF@%tmp_var_1
PUSHS LF@sub
POPS LF@%tmp_var_2
WRITE LF@%tmp_var_2
PUSHS string@\010
POPS LF@%tmp_var_3
WRITE LF@%tmp_var_3
JUMP $endif_0
LABEL $else_0
PUSHS string@Error\032extracting\032substring.\010
POPS LF@%tmp_var_4
WRITE LF@%tmp_var_4
LABEL $endif_0
POPFRAME
RETURN
LABEL test_loops
CREATEFRAME
PUSHFRAME
DEFVAR LF@%tmp_type
DEFVAR LF@%tmp_var
DEFVAR LF@%tmp_bool
DEFVAR LF@%tmp_var_0
DEFVAR LF@count
DEFVAR LF@%tmp_var_1
DEFVAR LF@%tmp_var_2
DEFVAR LF@%tmp_var_3
PUSHS string@\010---\032Test\032loops\032---\010
POPS LF@%tmp_var_0
WRITE LF@%tmp_var_0
PUSHS int@5
POPS LF@count
LABEL $while_start_0
PUSHS LF@count
PUSHS int@0
GTS
PUSHS bool@true
JUMPIFNEQS $while_end_0
PUSHS string@Counter:\032
POPS LF@%tmp_var_1
WRITE LF@%tmp_var_1
PUSHS LF@count
POPS LF@%tmp_var_2
WRITE LF@%tmp_var_2
PUSHS string@\010
POPS LF@%tmp_var_3
WRITE LF@%tmp_var_3
PUSHS LF@count
PUSHS int@1
SUBS
POPS LF@count
JUMP $while_start_0
LABEL $while_end_0
POPFRAME
RETURN
LABEL test_null_handling
CREATEFRAME
PUSHFRAME
DEFVAR LF@%tmp_type
DEFVAR LF@%tmp_var
DEFVAR LF@%tmp_bool
DEFVAR LF@%tmp_var_0
DEFVAR LF@optional
DEFVAR LF@value
DEFVAR LF@%tmp_var_1
DEFVAR LF@%tmp_var_2
DEFVAR LF@%tmp_var_3
DEFVAR LF@%tmp_var_4
DEFVAR LF@%tmp_var_5
DEFVAR LF@%tmp_var_6
DEFVAR LF@%tmp_var_7
PUSHS string@\010---\032Test\032null\032handling\032---\010
POPS LF@%tmp_var_0
WRITE LF@%tmp_var_0
PUSHS nil@nil
POPS LF@optional
TYPE LF@%tmp_type LF@optional
JUMPIFEQ $else_1 LF@%tmp_type string@nil
PUSHS LF@optional
POPS LF@value
PUSHS string@Value:\032
POPS LF@%tmp_var_1
WRITE LF@%tmp_var_1
PUSHS LF@value
POPS LF@%tmp_var_2
WRITE LF@%tmp_var_2
PUSHS string@\010
POPS LF@%tmp_var_3
WRITE LF@%tmp_var_3
JUMP $endif_1
LABEL $else_1
PUSHS string@Value\032is\032missing\032(null).\010
POPS LF@%tmp_var_4
WRITE LF@%tmp_var_4
LABEL $endif_1
PUSHS int@42
POPS LF@optional
TYPE LF@%tmp_type LF@optional
JUMPIFEQ $else_2 LF@%tmp_type string@nil
PUSHS LF@optional
POPS LF@value
PUSHS string@New\032value:\032
POPS LF@%tmp_var_5
WRITE LF@%tmp_var_5
PUSHS LF@value
POPS LF@%tmp_var_6
WRITE LF@%tmp_var_6
PUSHS string@\010
POPS LF@%tmp_var_7
WRITE LF@%tmp_var_7
JUMP $endif_2
LABEL $else_2
LABEL $endif_2
POPFRAME
RETURN
LABEL main
CREATEFRAME
PUSHFRAME
DEFVAR LF@%tmp_type
DEFVAR LF@%tmp_var
DEFVAR LF@%tmp_bool
DEFVAR LF@%tmp_var_0
DEFVAR LF@%tmp_var_1
PUSHS string@===\032Start\032of\032IFJ24\032language\032testing\032===\010
POPS LF@%tmp_var_0
WRITE LF@%tmp_var_0
CALL test_numbers
CALL test_strings
CALL test_substrings
CALL test_loops
CALL test_null_handling
PUSHS string@===\032End\032of\032testing\032===\010
POPS LF@%tmp_var_1
WRITE LF@%tmp_var_1
POPFRAME
RETURN
LABEL ifj-substring
CREATEFRAME
PUSHFRAME
DEFVAR LF@str
DEFVAR LF@start
DEFVAR LF@end
DEFVAR LF@length
DEFVAR LF@retval
DEFVAR LF@tmp_bool
DEFVAR LF@tmp_char
POPS LF@end
POPS LF@start
POPS LF@str
STRLEN LF@length LF@str
LT LF@tmp_bool LF@start int@0
JUMPIFEQ $substr_null LF@tmp_bool bool@true
LT LF@tmp_bool LF@end int@0
JUMPIFEQ $substr_null LF@tmp_bool bool@true
GT LF@tmp_bool LF@start LF@end
JUMPIFEQ $substr_null LF@tmp_bool bool@true
LT LF@tmp_bool LF@start LF@length
JUMPIFEQ $check_j LF@tmp_bool bool@true
JUMP $substr_null
LABEL $check_j
GT LF@tmp_bool LF@end LF@length
JUMPIFEQ $substr_null LF@tmp_bool bool@true
SUB LF@length LF@end LF@start
MOVE LF@retval string@
LABEL $substr_loop
JUMPIFEQ $substr_end LF@length int@0
GETCHAR LF@tmp_char LF@str LF@start
CONCAT LF@retval LF@retval LF@tmp_char
ADD LF@start LF@start int@1
SUB LF@length LF@length int@1
JUMP $substr_loop
LABEL $substr_end
PUSHS LF@retval
POPFRAME
RETURN
LABEL $substr_null
PUSHS nil@nil
POPFRAME
RETURN
LABEL ifj-string
CREATEFRAME
PUSHFRAME
DEFVAR LF@str_literal
POPS LF@str_literal
PUSHS LF@str_literal
POPFRAME
RETURN
